import Head from 'next/head';
import Image from 'next/image';
import styles from '@/styles/Home.module.css';
import { Swiper, SwiperSlide, useSwiper } from 'swiper/react';

// import required modules
import { Autoplay, Pagination, Navigation } from 'swiper';
// Import Swiper styles
import 'swiper/css';
// import 'swiper/css/pagination';
// import 'swiper/css/navigation';
import { useRef, useState } from 'react';

export default function Home() {
	const [spin, setSpin] = useState(false);
	const [swipper1, setSwipper1] = useState(null);
	const [choice1, setChoice1] = useState(undefined);
	const swiper1Loop = useRef(0);
	// const swiper = useSwiper();
	// swiper.slideTo();

	const slideNum = swipper1?.activeIndex || 0 + 1;
	console.log(swipper1?.activeIndex);

	const swipeIt = () => {
		for (let i = 0; i < 4; i++) {
			swipper1.slideNext();
			console.log(i);
		}
	};

	// swiper.on('transitionEnd', function() {
	//   if(swiper.activeIndex === 2) {
	//     swiper.autoplay.stop();
	//   }
	// }

	return (
		<>
			<Head>
				<title>Slot App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.main}>
				<Swiper
					spaceBetween={0}
					noSwiping
					allowTouchMove={false}
					direction={'vertical'}
					// noSwiping
					loop
					// centeredSlides={true}
					slidesPerView={3}
					speed={30}
					autoplay={{
						delay: 30,
						// disableOnInteraction: false,
					}}
					pagination={{
						clickable: true,
					}}
					// enabled={spin}
					allowSlidePrev={false}
					navigation={true}
					// modules={[Autoplay, Pagination, Navigation]}
					modules={[Autoplay]}
					className='mySwiper'
					onSwiper={(swiper) => {
						swiper.autoplay.stop();
						setSwipper1(swiper);
					}}
					// onTransitionEnd={(swiper) => {
					// 	console.log('active', swiper.activeIndex);
					// 	console.log('real', swiper.realIndex);
					// 	console.log('snap', swiper.snapIndex);
					// 	if (swiper.realIndex === 2) {
					// 		console.log('trans');
					// 		swiper.autoplay.stop();
					// 		// swiper.autoplay.start();
					// 	}
					// }}
					// onSlideChange={(swiper) => {
					// 	console.log('active', swiper.activeIndex);
					// 	console.log('real', swiper.realIndex);
					// 	console.log('snap', swiper.snapIndex);
					// 	if (swiper.realIndex === 2) {
					// 		console.log('trans');
					// 		swiper.autoplay.stop();
					// 		// swiper.autoplay.start();
					// 	}
					// }}
					onSlideChangeTransitionEnd={(swiper) => {
						// console.log('active', swiper.activeIndex);
						// console.log('real', swiper.realIndex);
						// console.log('snap', swiper.snapIndex);
						// console.log('loopedSlides', swiper.loopedSlides);
						// console.log('slides length', swiper.slides.length);
						// console.log('slides length', swiper);

						if (swiper.realIndex === 0) swiper1Loop.current++;

						if (choice1 && swiper.realIndex === choice1) {
							console.log('trans');
							console.log('loop:', swiper1Loop.current);
							if (swiper1Loop.current > 9) {
								swiper.autoplay.stop();
								setChoice1(undefined);
							}

							// swiper.autoplay.start();
						}
					}}
				>
					<SwiperSlide>
						<div className='inside'>🍇</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍉</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍊</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍎</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🥝</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍒</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍌</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍐</div>
					</SwiperSlide>
					<SwiperSlide>
						<div className='inside'>🍓</div>
					</SwiperSlide>
					{/* <SwiperSlide>Slide 10</SwiperSlide>
					<SwiperSlide>Slide 11</SwiperSlide> */}
				</Swiper>
				{/* <button type='button' onClick={() => swipper1.autoplay.stop()}>
					SPIN
				</button> */}
				<button
					type='button'
					onClick={() => {
						// console.log(swipper1?.activeIndex);
						// let nextIndex = (swipper1.activeIndex + 5) % swipper1.slides.length;
						// // if (nextIndex < 0) {
						// // 	nextIndex = swipper1.slides.length + nextIndex;
						// // }
						// console.log({ nextIndex });
						// swipper1?.slideToLoop(nextIndex, 3000);
						// swipeIt();
						// swipper1?.autoplay.start();
						console.log(swipper1?.autoplay);
						swiper1Loop.current = 0;
						swipper1?.autoplay.running
							? swipper1?.autoplay.stop()
							: swipper1?.autoplay.start();
						// setSpin((curr) => !curr);
					}}
				>
					SPIN
				</button>
				<button onClick={() => setChoice1((curr) => (curr ? undefined : 6))}>
					STOP ON {choice1}
				</button>
			</main>
		</>
	);
}

import React, { forwardRef, useRef, useState } from 'react';
import { Autoplay } from 'swiper';
import { Swiper, SwiperSlide } from 'swiper/react';

const Vertical = forwardRef(function Vertical(props, ref) {
	const [swiperInstance, setSwiperInstance] = useState(null);
	const [choice, setChoice] = useState(undefined);
	const swiperLoop = useRef(0);
	// const swiper = useSwiper();
	// swiper.slideTo();

	const slideNum = swiperInstance?.activeIndex || 0 + 1;
	console.log(swiperInstance?.activeIndex);

	const swipeIt = () => {
		for (let i = 0; i < 4; i++) {
			swiperInstance.slideNext();
			console.log(i);
		}
	};

	// swiper.on('transitionEnd', function() {
	//   if(swiper.activeIndex === 2) {
	//     swiper.autoplay.stop();
	//   }
	// }

	return (
		<>
			<Swiper
				spaceBetween={0}
				noSwiping
				allowTouchMove={false}
				direction={'vertical'}
				// noSwiping
				loop
				// centeredSlides={true}
				slidesPerView={3}
				speed={30}
				autoplay={{
					delay: 30,
					// disableOnInteraction: false,
				}}
				pagination={{
					clickable: true,
				}}
				// enabled={spin}
				allowSlidePrev={false}
				navigation={true}
				// modules={[Autoplay, Pagination, Navigation]}
				modules={[Autoplay]}
				className='mySwiper'
				onSwiper={(swiper) => {
					swiper.autoplay.stop();
					setSwiperInstance(swiper);
					ref.current[0] = swiper;
				}}
				// onTransitionEnd={(swiper) => {
				// 	console.log('active', swiper.activeIndex);
				// 	console.log('real', swiper.realIndex);
				// 	console.log('snap', swiper.snapIndex);
				// 	if (swiper.realIndex === 2) {
				// 		console.log('trans');
				// 		swiper.autoplay.stop();
				// 		// swiper.autoplay.start();
				// 	}
				// }}
				// onSlideChange={(swiper) => {
				// 	console.log('active', swiper.activeIndex);
				// 	console.log('real', swiper.realIndex);
				// 	console.log('snap', swiper.snapIndex);
				// 	if (swiper.realIndex === 2) {
				// 		console.log('trans');
				// 		swiper.autoplay.stop();
				// 		// swiper.autoplay.start();
				// 	}
				// }}
				onSlideChangeTransitionEnd={(swiper) => {
					// console.log('active', swiper.activeIndex);
					// console.log('real', swiper.realIndex);
					// console.log('snap', swiper.snapIndex);
					// console.log('loopedSlides', swiper.loopedSlides);
					// console.log('slides length', swiper.slides.length);
					// console.log('slides length', swiper);

					if (swiper.realIndex === 0) swiperLoop.current++;

					if (choice && swiper.realIndex === choice) {
						console.log('trans');
						console.log('loop:', swiperLoop.current);
						if (swiperLoop.current > 9) {
							swiper.autoplay.stop();
							setChoice(undefined);
						}

						// swiper.autoplay.start();
					}
				}}
			>
				<SwiperSlide>
					<div className='inside'>🍇</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍉</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍊</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍎</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🥝</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍒</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍌</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍐</div>
				</SwiperSlide>
				<SwiperSlide>
					<div className='inside'>🍓</div>
				</SwiperSlide>
				{/* <SwiperSlide>Slide 10</SwiperSlide>
					<SwiperSlide>Slide 11</SwiperSlide> */}
			</Swiper>
		</>
	);
});

export default Vertical;
